name: 'üî• IDE Build'

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        host: [windows, linux, mac]
        arch: [win64_mingw, linux, mac]
        suffix: [exe, run, dmg]
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.1'
        host: ${{ matrix.host }}
        target: 'desktop'
        arch: ${{ matrix.arch }}
        modules: 'qtimageformats qtmultimedia qtserialbus qtserialport'
        cache: true
        tools: 'tools_cmake tools_ifw tools_ninja tools_mingw90'

    - name: 'üèó Build IDE'
      run: source make.py

    - name: '‚¨Ü Upload artifacts'
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v3
      with:
        name: 'openmv-ide-*.${{ matrix.suffix }}'
        path: build
        if-no-files-found: error

  stable-release:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        host: [windows, linux, mac]
        arch: [win64_mingw, linux, mac]
        suffix: [exe, run, dmg]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: 'ü§å Download artifacts'
      uses: actions/download-artifact@v3
      with:
        name: 'openmv-ide-*.${{ matrix.suffix }}'
        path: build

    - name: 'üî• Create stable release'
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: 'openmv-ide-*.${{ matrix.suffix }}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v2
      with:
        name: 'openmv-ide-*.${{ matrix.suffix }}'
        failOnError: false

  development-release:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        host: [windows, linux, mac]
        arch: [win64_mingw, linux, mac]
        suffix: [exe, run, dmg]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') == false
    permissions:
      contents: write
    steps:
    - name: '‚è≥ Checkout repository'
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: 'ü§å Download artifacts'
      uses: actions/download-artifact@v3
      with:
        name: 'openmv-ide-*.${{ matrix.suffix }}'
        path: build

    - name: 'üßπ Delete old release'
      uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: true
        tag_name: development
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üî• Create development release'
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        name: Development Release
        tag_name: development
        body: |
            **‚ö†Ô∏è This is a development release, and it may be unstable.**
        files: 'openmv-ide-*.${{ matrix.suffix }}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v2
      with:
        name: 'openmv-ide-*.${{ matrix.suffix }}'
        failOnError: false
